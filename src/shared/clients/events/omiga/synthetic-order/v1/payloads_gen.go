
// Code generated by go-omiga-template, DO NOT EDIT.

package syntheticorderv1

import (
	"time"

	"github.com/google/uuid"
)

type ID uuid.UUID

    
    // SyntheticOrderEvent represents a SyntheticOrderEvent model.
type SyntheticOrderEvent struct {
  Metadata Metadata `json:"metadata"`
  Data Data `json:"data"`
}
    
    
    // Metadata represents a Metadata model.
type Metadata struct {
  Id ID `json:"id"` // The unique message ID
  Source string `json:"source"` // undefined
  Type Type `json:"type"`
  Subject string `json:"subject"` // undefined
  Time time.Time `json:"time"` // undefined
  CorrelationId ID `json:"correlationId"` // undefined
  Actor string `json:"actor"` // undefined
}
    
    
    // Type represents an enum of string.
type Type string

const (
  TypeOrderSubmitted Type = "orderSubmitted"
  TypeOrderCancel = "orderCancel"
)
    
    
    // Data represents a Data model.
type Data struct {
  BeforeState *Order `json:"beforeState",omitempty`
  AfterState Order `json:"afterState"`
}
    
    
    // Order represents a Order model.
type Order struct {
  Id ID `json:"id"` // The unique synthetic order ID
  Exchange *Exchange `json:"exchange",omitempty`
  OrderDetails OrderDetails `json:"orderDetails"`
  AdditionalProperties *[]interface{} `json:"additionalProperties",omitempty` // undefined
}
    
    
    // Exchange represents a Exchange model.
type Exchange struct {
  Id *string `json:"id",omitempty` // The unique ID of the supported exchange
}
    
    
    // OrderDetails represents a OrderDetails model.
type OrderDetails struct {
  Id ID `json:"id"` // The unique order ID
  BaseCurrency *Currency `json:"baseCurrency",omitempty`
  CounterCurrency *Currency `json:"counterCurrency",omitempty`
  Type *OrderType `json:"type",omitempty`
  Side *OrderSide `json:"side",omitempty`
  Quantity *Money `json:"quantity",omitempty`
  Price *Money `json:"price",omitempty`
  AdditionalProperties *[]interface{} `json:"additionalProperties",omitempty` // undefined
}
    
    
    // Currency represents a Currency model.
type Currency struct {
  Name string `json:"name"` // undefined
  Code string `json:"code"` // undefined
  MaxPrecision int `json:"maxPrecision"` // undefined
  Digital bool `json:"digital"` // undefined
}
    
    
    // OrderType represents an enum of string.
type OrderType string

const (
  OrderTypeInstant OrderType = "instant"
  OrderTypeMarket = "market"
  OrderTypeLimit = "limit"
  OrderTypeStop = "stop"
  OrderTypeTrailingStop = "trailing_stop"
)
    
    
    // OrderSide represents an enum of string.
type OrderSide string

const (
  OrderSideBid OrderSide = "bid"
  OrderSideAsk = "ask"
)
    
    
    // Money represents a Money model.
type Money struct {
  Amount int `json:"amount"` // undefined
  Scale int `json:"scale"` // undefined
  Currency Currency `json:"currency"`
}
    