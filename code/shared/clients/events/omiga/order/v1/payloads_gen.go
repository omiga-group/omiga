
// Code generated by go-omiga-template, DO NOT EDIT.

package orderv1

import (
	"strings"
	"time"

	"github.com/google/uuid"
)

type ID struct {
  UUID uuid.UUID
}

    
    // DomainEvent represents a DomainEvent model.
type DomainEvent struct {
  Metadata Metadata `json:"metadata"`
  Data Data `json:"data"`
}
    
    
    // Metadata represents a Metadata model.
type Metadata struct {
  Id ID `json:"id"` // The unique message ID
  Source string `json:"source"` // undefined
  Type AnonymousSchema3 `json:"type"`
  Subject string `json:"subject"` // undefined
  Time time.Time `json:"time"` // undefined
  CorrelationId ID `json:"correlationId"` // undefined
  Actor string `json:"actor"` // undefined
}
    
    
    // AnonymousSchema3 represents an enum of string.
type AnonymousSchema3 string

const (
  AnonymousSchema3OrderCreated AnonymousSchema3 = "orderCreated"
  AnonymousSchema3OrderUpdated = "orderUpdated"
)
    
    
    // Data represents a Data model.
type Data struct {
  BeforeState *Order `json:"beforeState",omitempty`
  AfterState Order `json:"afterState"`
}
    
    
    // Order represents a Order model.
type Order struct {
  Id ID `json:"id"` // The unique order ID
  AdditionalProperties *[]interface{} `json:"additionalProperties",omitempty` // undefined
}
    
func (i *ID) UnmarshalJSON(b []byte) error {
  if parsedUuid, err := uuid.Parse(strings.Trim(string(b), "\"")); err == nil {
    i.UUID = parsedUuid
  } else {
    return err
  }

  return nil
}
