name: "Omigactl"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - ".github/workflows/lint.yml"
      - ".github/workflows/omigactl.yml"
      - "src/go.mod"
      - "src/go.sum"
      - "src/shared/**"
  pull_request:
    branches:
      - "main"
    paths:
      - ".github/workflows/lint.yml"
      - ".github/workflows/omigactl.yml"
      - "src/go.mod"
      - "src/go.sum"
      - "src/shared/**"

jobs:
  build:
    name: "Build - omigactl"
    runs-on:
      - self-hosted
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1

    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set required environment variable
        run: |
          echo "unittest_container_tag=$(uuidgen)" >> $GITHUB_ENV
          echo "unittest_extract_container_name=$(uuidgen)" >> $GITHUB_ENV

      - name: Unit Tests
        run: |
          DOCKER_BUILDKIT=1 VERSION=${{ github.sha }} docker build \
             --pull \
             --target test \
            --tag ${{ env.unittest_container_tag }} \
            --file ./src/shared/omigactl/Dockerfile \
            ./src

      - name: Extract coverage output
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          mkdir -p ./coverage/reports
          docker create --name ${{ env.unittest_extract_container_name }} ${{ env.unittest_container_tag }}
          docker cp ${{ env.unittest_extract_container_name }}:/coverage/reports/. "./coverage/reports/"

      - name: Upload coverage to Codecov
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          flags: unittests,omigactl
          fail_ci_if_error: true
          verbose: true

      - name: Clean up
        if: always()
        run: |
          docker rm ${{ env.unittest_extract_container_name }} || true
          docker rmi ${{ env.unittest_container_tag }} || true
