// Code generated by MockGen. DO NOT EDIT.
// Source: order-book-subscriber.go

// Package mock_subscribers is a generated GoMock package.
package mock_subscribers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKrakenOrderBookSubscriber is a mock of KrakenOrderBookSubscriber interface.
type MockKrakenOrderBookSubscriber struct {
	ctrl     *gomock.Controller
	recorder *MockKrakenOrderBookSubscriberMockRecorder
}

// MockKrakenOrderBookSubscriberMockRecorder is the mock recorder for MockKrakenOrderBookSubscriber.
type MockKrakenOrderBookSubscriberMockRecorder struct {
	mock *MockKrakenOrderBookSubscriber
}

// NewMockKrakenOrderBookSubscriber creates a new mock instance.
func NewMockKrakenOrderBookSubscriber(ctrl *gomock.Controller) *MockKrakenOrderBookSubscriber {
	mock := &MockKrakenOrderBookSubscriber{ctrl: ctrl}
	mock.recorder = &MockKrakenOrderBookSubscriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKrakenOrderBookSubscriber) EXPECT() *MockKrakenOrderBookSubscriberMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockKrakenOrderBookSubscriber) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockKrakenOrderBookSubscriberMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockKrakenOrderBookSubscriber)(nil).Close))
}
