// Code generated by MockGen. DO NOT EDIT.
// Source: venue_repository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/omiga-group/omiga/src/exchange/shared/models"
)

// MockVenueRepository is a mock of VenueRepository interface.
type MockVenueRepository struct {
	ctrl     *gomock.Controller
	recorder *MockVenueRepositoryMockRecorder
}

// MockVenueRepositoryMockRecorder is the mock recorder for MockVenueRepository.
type MockVenueRepositoryMockRecorder struct {
	mock *MockVenueRepository
}

// NewMockVenueRepository creates a new mock instance.
func NewMockVenueRepository(ctrl *gomock.Controller) *MockVenueRepository {
	mock := &MockVenueRepository{ctrl: ctrl}
	mock.recorder = &MockVenueRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVenueRepository) EXPECT() *MockVenueRepositoryMockRecorder {
	return m.recorder
}

// CreateVenue mocks base method.
func (m *MockVenueRepository) CreateVenue(ctx context.Context, venue models.Venue) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVenue", ctx, venue)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVenue indicates an expected call of CreateVenue.
func (mr *MockVenueRepositoryMockRecorder) CreateVenue(ctx, venue interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVenue", reflect.TypeOf((*MockVenueRepository)(nil).CreateVenue), ctx, venue)
}

// CreateVenues mocks base method.
func (m *MockVenueRepository) CreateVenues(ctx context.Context, venues []models.Venue) (map[string]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVenues", ctx, venues)
	ret0, _ := ret[0].(map[string]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVenues indicates an expected call of CreateVenues.
func (mr *MockVenueRepositoryMockRecorder) CreateVenues(ctx, venues interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVenues", reflect.TypeOf((*MockVenueRepository)(nil).CreateVenues), ctx, venues)
}
