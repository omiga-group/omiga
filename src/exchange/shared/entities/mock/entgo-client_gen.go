// Code generated by MockGen. DO NOT EDIT.
// Source: entgo-client.go

// Package mock_entities is a generated GoMock package.
package mock_entities

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/omiga-group/omiga/src/exchange/shared/entities"
)

// MockEntgoClient is a mock of EntgoClient interface.
type MockEntgoClient struct {
	ctrl     *gomock.Controller
	recorder *MockEntgoClientMockRecorder
}

// MockEntgoClientMockRecorder is the mock recorder for MockEntgoClient.
type MockEntgoClientMockRecorder struct {
	mock *MockEntgoClient
}

// NewMockEntgoClient creates a new mock instance.
func NewMockEntgoClient(ctrl *gomock.Controller) *MockEntgoClient {
	mock := &MockEntgoClient{ctrl: ctrl}
	mock.recorder = &MockEntgoClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEntgoClient) EXPECT() *MockEntgoClientMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockEntgoClient) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockEntgoClientMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockEntgoClient)(nil).Close))
}

// GetClient mocks base method.
func (m *MockEntgoClient) GetClient() *entities.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClient")
	ret0, _ := ret[0].(*entities.Client)
	return ret0
}

// GetClient indicates an expected call of GetClient.
func (mr *MockEntgoClientMockRecorder) GetClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClient", reflect.TypeOf((*MockEntgoClient)(nil).GetClient))
}
