// Code generated by MockGen. DO NOT EDIT.
// Source: configuration_helper.go

// Package mock_configuration is a generated GoMock package.
package mock_configuration

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigurationHelper is a mock of ConfigurationHelper interface.
type MockConfigurationHelper struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurationHelperMockRecorder
}

// MockConfigurationHelperMockRecorder is the mock recorder for MockConfigurationHelper.
type MockConfigurationHelperMockRecorder struct {
	mock *MockConfigurationHelper
}

// NewMockConfigurationHelper creates a new mock instance.
func NewMockConfigurationHelper(ctrl *gomock.Controller) *MockConfigurationHelper {
	mock := &MockConfigurationHelper{ctrl: ctrl}
	mock.recorder = &MockConfigurationHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigurationHelper) EXPECT() *MockConfigurationHelperMockRecorder {
	return m.recorder
}

// LoadYaml mocks base method.
func (m *MockConfigurationHelper) LoadYaml(configFilePath string, config interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadYaml", configFilePath, config)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadYaml indicates an expected call of LoadYaml.
func (mr *MockConfigurationHelperMockRecorder) LoadYaml(configFilePath, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadYaml", reflect.TypeOf((*MockConfigurationHelper)(nil).LoadYaml), configFilePath, config)
}
