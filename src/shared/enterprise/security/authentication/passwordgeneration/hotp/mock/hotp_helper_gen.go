// Code generated by MockGen. DO NOT EDIT.
// Source: hotp_helper.go

// Package mock_hotp is a generated GoMock package.
package mock_hotp

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHotpHelper is a mock of HotpHelper interface.
type MockHotpHelper struct {
	ctrl     *gomock.Controller
	recorder *MockHotpHelperMockRecorder
}

// MockHotpHelperMockRecorder is the mock recorder for MockHotpHelper.
type MockHotpHelperMockRecorder struct {
	mock *MockHotpHelper
}

// NewMockHotpHelper creates a new mock instance.
func NewMockHotpHelper(ctrl *gomock.Controller) *MockHotpHelper {
	mock := &MockHotpHelper{ctrl: ctrl}
	mock.recorder = &MockHotpHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHotpHelper) EXPECT() *MockHotpHelperMockRecorder {
	return m.recorder
}

// GenerateCode mocks base method.
func (m *MockHotpHelper) GenerateCode(secret string, counter uint64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateCode", secret, counter)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateCode indicates an expected call of GenerateCode.
func (mr *MockHotpHelperMockRecorder) GenerateCode(secret, counter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateCode", reflect.TypeOf((*MockHotpHelper)(nil).GenerateCode), secret, counter)
}
