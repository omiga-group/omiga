// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ExchangesColumns holds the columns for the "exchanges" table.
	ExchangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "exchange_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "year_established", Type: field.TypeInt, Nullable: true},
		{Name: "country", Type: field.TypeString, Nullable: true},
		{Name: "image", Type: field.TypeString, Nullable: true},
		{Name: "links", Type: field.TypeJSON, Nullable: true},
		{Name: "has_trading_incentive", Type: field.TypeBool, Nullable: true},
		{Name: "centralized", Type: field.TypeBool, Nullable: true},
		{Name: "public_notice", Type: field.TypeString, Nullable: true},
		{Name: "alert_notice", Type: field.TypeString, Nullable: true},
		{Name: "trust_score", Type: field.TypeInt, Nullable: true},
		{Name: "trust_score_rank", Type: field.TypeInt, Nullable: true},
		{Name: "trade_volume_24h_btc", Type: field.TypeFloat64, Nullable: true},
		{Name: "trade_volume_24h_btc_normalized", Type: field.TypeFloat64, Nullable: true},
	}
	// ExchangesTable holds the schema information for the "exchanges" table.
	ExchangesTable = &schema.Table{
		Name:       "exchanges",
		Columns:    ExchangesColumns,
		PrimaryKey: []*schema.Column{ExchangesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "exchange_exchange_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[1]},
			},
			{
				Name:    "exchange_name",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[2]},
			},
			{
				Name:    "exchange_year_established",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[3]},
			},
			{
				Name:    "exchange_country",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[4]},
			},
			{
				Name:    "exchange_image",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[5]},
			},
			{
				Name:    "exchange_has_trading_incentive",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[7]},
			},
			{
				Name:    "exchange_centralized",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[8]},
			},
			{
				Name:    "exchange_public_notice",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[9]},
			},
			{
				Name:    "exchange_alert_notice",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[10]},
			},
			{
				Name:    "exchange_trust_score",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[11]},
			},
			{
				Name:    "exchange_trust_score_rank",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[12]},
			},
			{
				Name:    "exchange_trade_volume_24h_btc",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[13]},
			},
			{
				Name:    "exchange_trade_volume_24h_btc_normalized",
				Unique:  false,
				Columns: []*schema.Column{ExchangesColumns[14]},
			},
		},
	}
	// OutboxesColumns holds the columns for the "outboxes" table.
	OutboxesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "topic", Type: field.TypeString},
		{Name: "key", Type: field.TypeString},
		{Name: "payload", Type: field.TypeBytes},
		{Name: "headers", Type: field.TypeJSON},
		{Name: "retry_count", Type: field.TypeInt},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PENDING", "SUCCEEDED", "FAILED"}},
		{Name: "last_retry", Type: field.TypeTime, Nullable: true},
		{Name: "processing_errors", Type: field.TypeJSON, Nullable: true},
	}
	// OutboxesTable holds the schema information for the "outboxes" table.
	OutboxesTable = &schema.Table{
		Name:       "outboxes",
		Columns:    OutboxesColumns,
		PrimaryKey: []*schema.Column{OutboxesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "outbox_last_retry",
				Unique:  false,
				Columns: []*schema.Column{OutboxesColumns[8]},
			},
			{
				Name:    "outbox_status",
				Unique:  false,
				Columns: []*schema.Column{OutboxesColumns[7]},
			},
		},
	}
	// TickersColumns holds the columns for the "tickers" table.
	TickersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "base", Type: field.TypeString},
		{Name: "target", Type: field.TypeString},
		{Name: "market", Type: field.TypeJSON, Nullable: true},
		{Name: "last", Type: field.TypeFloat64, Nullable: true},
		{Name: "volume", Type: field.TypeFloat64, Nullable: true},
		{Name: "converted_last", Type: field.TypeJSON, Nullable: true},
		{Name: "converted_volume", Type: field.TypeJSON, Nullable: true},
		{Name: "trust_score", Type: field.TypeString, Nullable: true},
		{Name: "bid_ask_spread_percentage", Type: field.TypeFloat64, Nullable: true},
		{Name: "timestamp", Type: field.TypeTime, Nullable: true},
		{Name: "last_traded_at", Type: field.TypeTime, Nullable: true},
		{Name: "last_fetch_at", Type: field.TypeTime, Nullable: true},
		{Name: "is_anomaly", Type: field.TypeBool, Nullable: true},
		{Name: "is_stale", Type: field.TypeBool, Nullable: true},
		{Name: "trade_url", Type: field.TypeString, Nullable: true},
		{Name: "token_info_url", Type: field.TypeString, Nullable: true},
		{Name: "coin_id", Type: field.TypeString, Nullable: true},
		{Name: "target_coin_id", Type: field.TypeString, Nullable: true},
		{Name: "exchange_ticker", Type: field.TypeInt},
	}
	// TickersTable holds the schema information for the "tickers" table.
	TickersTable = &schema.Table{
		Name:       "tickers",
		Columns:    TickersColumns,
		PrimaryKey: []*schema.Column{TickersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tickers_exchanges_ticker",
				Columns:    []*schema.Column{TickersColumns[19]},
				RefColumns: []*schema.Column{ExchangesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ticker_base",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[1]},
			},
			{
				Name:    "ticker_target",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[2]},
			},
			{
				Name:    "ticker_last",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[4]},
			},
			{
				Name:    "ticker_volume",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[5]},
			},
			{
				Name:    "ticker_trust_score",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[8]},
			},
			{
				Name:    "ticker_bid_ask_spread_percentage",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[9]},
			},
			{
				Name:    "ticker_timestamp",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[10]},
			},
			{
				Name:    "ticker_last_traded_at",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[11]},
			},
			{
				Name:    "ticker_last_fetch_at",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[12]},
			},
			{
				Name:    "ticker_is_anomaly",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[13]},
			},
			{
				Name:    "ticker_is_stale",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[14]},
			},
			{
				Name:    "ticker_trade_url",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[15]},
			},
			{
				Name:    "ticker_token_info_url",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[16]},
			},
			{
				Name:    "ticker_coin_id",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[17]},
			},
			{
				Name:    "ticker_target_coin_id",
				Unique:  false,
				Columns: []*schema.Column{TickersColumns[18]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ExchangesTable,
		OutboxesTable,
		TickersTable,
	}
)

func init() {
	TickersTable.ForeignKeys[0].RefTable = ExchangesTable
}
