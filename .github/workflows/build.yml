name: "Build"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["go", "javascript"]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #   echo "Run, Build Application using script"
      #   ./location_of_script_within_repo/buildscript.sh

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.48

          # Optional: working directory, useful for monorepos
          working-directory: src

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0
          args: --timeout=3m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

  build:
    name: Build, test and tag
    runs-on: ubuntu-latest
    needs: lint
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1

    strategy:
      matrix:
        include:
          - repository: order-db-migrator
            registry: omiga
            dockerfile: ./src/order/shared/repositories/cli/Dockerfile
            context: ./src
            relevance:
              - ".github/workflows/**"
              - "src/shared/**"
              - "src/order/shared/**"

          - repository: order-api
            registry: omiga
            dockerfile: ./src/order/order-api/Dockerfile
            context: ./src
            relevance:
              - ".github/workflows/**"
              - "src/shared/**"
              - "src/order/shared/**"
              - "src/order/order-api/**"

          - repository: order-processor
            registry: omiga
            dockerfile: ./src/order/order-processor/Dockerfile
            context: ./src
            relevance:
              - ".github/workflows/**"
              - "src/shared/**"
              - "src/order/shared/**"
              - "src/order/order-processor/**"

          - repository: exchange-db-migrator
            registry: omiga
            dockerfile: ./src/exchange/shared/repositories/cli/Dockerfile
            context: ./src
            relevance:
              - ".github/workflows/**"
              - "src/shared/**"
              - "src/exchange/shared/**"

          - repository: binance-processor
            registry: omiga
            dockerfile: ./src/exchange/binance-processor/Dockerfile
            context: ./src
            relevance:
              - ".github/workflows/**"
              - "src/shared/**"
              - "src/exchange/shared/**"
              - "src/exchange/binance-processor/**"

          - repository: ftx-processor
            registry: omiga
            dockerfile: ./src/exchange/ftx-processor/Dockerfile
            context: ./src
            relevance:
              - ".github/workflows/**"
              - "src/shared/**"
              - "src/exchange/shared/**"
              - "src/exchange/ftx-processor/**"

          - repository: omiga-processor
            registry: omiga
            dockerfile: ./src/exchange/omiga-processor/Dockerfile
            context: ./src
            relevance:
              - ".github/workflows/**"
              - "src/shared/**"
              - "src/exchange/shared/**"
              - "src/exchange/omiga-processor/**"

    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            relevant_directories_changed: ${{ matrix.relevance }}

      - name: Install GitVersion
        if: ${{ steps.filter.outputs.relevant_directories_changed == 'true' }}
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: "5.x"

      - name: Determine Version
        if: ${{ steps.filter.outputs.relevant_directories_changed == 'true' }}
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Build, test and tag the Docker image
        if: ${{ steps.filter.outputs.relevant_directories_changed == 'true' }}
        run: |
          DOCKER_BUILDKIT=1 VERSION=$GitVersion_SemVer docker build --pull \
            --tag ${{ matrix.registry }}/${{ matrix.repository }}:$GitVersion_SemVer \
            --file ${{ matrix.dockerfile }} \
            ${{ matrix.context }}
