// Code generated by MockGen. DO NOT EDIT.
// Source: currency_helper.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCurrencyHelper is a mock of CurrencyHelper interface.
type MockCurrencyHelper struct {
	ctrl     *gomock.Controller
	recorder *MockCurrencyHelperMockRecorder
}

// MockCurrencyHelperMockRecorder is the mock recorder for MockCurrencyHelper.
type MockCurrencyHelperMockRecorder struct {
	mock *MockCurrencyHelper
}

// NewMockCurrencyHelper creates a new mock instance.
func NewMockCurrencyHelper(ctrl *gomock.Controller) *MockCurrencyHelper {
	mock := &MockCurrencyHelper{ctrl: ctrl}
	mock.recorder = &MockCurrencyHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCurrencyHelper) EXPECT() *MockCurrencyHelperMockRecorder {
	return m.recorder
}

// GetCoinsNames mocks base method.
func (m *MockCurrencyHelper) GetCoinsNames(ctx context.Context, symbols []string) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoinsNames", ctx, symbols)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCoinsNames indicates an expected call of GetCoinsNames.
func (mr *MockCurrencyHelperMockRecorder) GetCoinsNames(ctx, symbols interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoinsNames", reflect.TypeOf((*MockCurrencyHelper)(nil).GetCoinsNames), ctx, symbols)
}
