// Code generated by MockGen. DO NOT EDIT.
// Source: symbol-enricher.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSymbolEnricher is a mock of SymbolEnricher interface.
type MockSymbolEnricher struct {
	ctrl     *gomock.Controller
	recorder *MockSymbolEnricherMockRecorder
}

// MockSymbolEnricherMockRecorder is the mock recorder for MockSymbolEnricher.
type MockSymbolEnricherMockRecorder struct {
	mock *MockSymbolEnricher
}

// NewMockSymbolEnricher creates a new mock instance.
func NewMockSymbolEnricher(ctrl *gomock.Controller) *MockSymbolEnricher {
	mock := &MockSymbolEnricher{ctrl: ctrl}
	mock.recorder = &MockSymbolEnricherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSymbolEnricher) EXPECT() *MockSymbolEnricherMockRecorder {
	return m.recorder
}

// GetCoinPair mocks base method.
func (m *MockSymbolEnricher) GetCoinPair(symbol string) (string, string, string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoinPair", symbol)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(string)
	ret3, _ := ret[3].(string)
	ret4, _ := ret[4].(error)
	return ret0, ret1, ret2, ret3, ret4
}

// GetCoinPair indicates an expected call of GetCoinPair.
func (mr *MockSymbolEnricherMockRecorder) GetCoinPair(symbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoinPair", reflect.TypeOf((*MockSymbolEnricher)(nil).GetCoinPair), symbol)
}
