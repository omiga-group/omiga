// Code generated by MockGen. DO NOT EDIT.
// Source: entgo-client.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repositories "github.com/omiga-group/omiga/src/order/shared/repositories"
)

// MockEntgoClient is a mock of EntgoClient interface.
type MockEntgoClient struct {
	ctrl     *gomock.Controller
	recorder *MockEntgoClientMockRecorder
}

// MockEntgoClientMockRecorder is the mock recorder for MockEntgoClient.
type MockEntgoClientMockRecorder struct {
	mock *MockEntgoClient
}

// NewMockEntgoClient creates a new mock instance.
func NewMockEntgoClient(ctrl *gomock.Controller) *MockEntgoClient {
	mock := &MockEntgoClient{ctrl: ctrl}
	mock.recorder = &MockEntgoClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEntgoClient) EXPECT() *MockEntgoClientMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockEntgoClient) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockEntgoClientMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockEntgoClient)(nil).Close))
}

// CommitTransaction mocks base method.
func (m *MockEntgoClient) CommitTransaction(tx *repositories.Tx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitTransaction", tx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CommitTransaction indicates an expected call of CommitTransaction.
func (mr *MockEntgoClientMockRecorder) CommitTransaction(tx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitTransaction", reflect.TypeOf((*MockEntgoClient)(nil).CommitTransaction), tx)
}

// CreateTransaction mocks base method.
func (m *MockEntgoClient) CreateTransaction(ctx context.Context) (*repositories.Tx, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTransaction", ctx)
	ret0, _ := ret[0].(*repositories.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTransaction indicates an expected call of CreateTransaction.
func (mr *MockEntgoClientMockRecorder) CreateTransaction(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransaction", reflect.TypeOf((*MockEntgoClient)(nil).CreateTransaction), ctx)
}

// GetClient mocks base method.
func (m *MockEntgoClient) GetClient() *repositories.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClient")
	ret0, _ := ret[0].(*repositories.Client)
	return ret0
}

// GetClient indicates an expected call of GetClient.
func (mr *MockEntgoClientMockRecorder) GetClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClient", reflect.TypeOf((*MockEntgoClient)(nil).GetClient))
}

// RollbackTransaction mocks base method.
func (m *MockEntgoClient) RollbackTransaction(tx *repositories.Tx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RollbackTransaction", tx)
	ret0, _ := ret[0].(error)
	return ret0
}

// RollbackTransaction indicates an expected call of RollbackTransaction.
func (mr *MockEntgoClientMockRecorder) RollbackTransaction(tx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RollbackTransaction", reflect.TypeOf((*MockEntgoClient)(nil).RollbackTransaction), tx)
}
